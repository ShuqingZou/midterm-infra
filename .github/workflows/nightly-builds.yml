name: Nightly Build and Deployment

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  create-ec2:
    runs-on: ubuntu-latest
    outputs:
      instance_id: ${{ steps.create.outputs.instance_id }}
      instance_ip: ${{ steps.create.outputs.instance_ip }}

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Launch temporary EC2 instance
        id: create
        run: |
          INSTANCE_DETAILS=$(aws ec2 run-instances \
            --region us-east-1 \
            --image-id ami-04b4f1a9cf54c11d0 \
            --instance-type t3.micro \
            --key-name midterm-key \
            --security-group-ids sg-03a57241aa0650326 \
            --subnet-id subnet-037010f619e30f145 \
            --associate-public-ip-address \
            --query 'Instances[0].[InstanceId, PublicIpAddress]' \
            --output text)

          INSTANCE_ID=$(echo "$INSTANCE_DETAILS" | awk '{print $1}')
          INSTANCE_IP=$(echo "$INSTANCE_DETAILS" | awk '{print $2}')

          echo "Instance ID: $INSTANCE_ID"
          echo "Instance IP: $INSTANCE_IP"
          echo "instance_id=$INSTANCE_ID" >> $GITHUB_ENV
          echo "instance_ip=$INSTANCE_IP" >> $GITHUB_ENV

  build-and-test:
    needs: create-ec2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Repo
        uses: actions/checkout@v4
        with:
          repository: ShuqingZou/midterm-source
          token: ${{ secrets.SOURCE_REPO_PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build and tag backend Docker image
        run: |
          docker build -t backend-nightly:latest ./backend

      - name: Build and tag frontend Docker image
        run: |
          docker build -t frontend-nightly:latest ./frontend

  smoke-test:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Wait for EC2 to be ready
        run: |
          sleep 60

      - name: SSH into EC2 and run Smoke Test
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.instance_ip }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            sudo apt update && sudo apt install -y docker.io
            docker-compose up -d
            sleep 10
            curl -f http://localhost:8800/ || exit 1
            curl -f http://localhost:8800/books || exit 1

  cleanup:
    needs: smoke-test
    runs-on: ubuntu-latest

    steps:
      - name: Terminate temporary EC2 instance
        run: |
          aws ec2 terminate-instances --region us-east-1 --instance-ids ${{ env.instance_id }}
